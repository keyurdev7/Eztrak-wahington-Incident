@using System.Web
@using ViewModels.Incident
@model IncidentViewModel


<form id="NewPostDetailForm">
    @if (Model.IncidentViewPostType == 1)
    {




        <div>
            <div class="card-custom validation-notes">
              
                <div id="update-list" style="padding:10px;overflow-y:auto;height:200px">
                    @if (Model.IncidentViewRepairViewModel?.listIncidentViewPostViewModel != null &&
                                    Model.IncidentViewRepairViewModel.listIncidentViewPostViewModel.Any())
                    {
                        @foreach (var post in Model.IncidentViewRepairViewModel.listIncidentViewPostViewModel.OrderByDescending(x => x.Id))
                        {
                            <div class="update-item d-flex justify-content-between align-items-start mb-2">
                                <div class="update-message flex-grow-1 me-3">@post.Message</div>
                                <div class="update-meta text-end d-flex flex-column align-items-end" style="white-space:nowrap">
                                    <span class="update-time">@post.TimeforMessage</span>
                                    <span class="update-email postby-div text-muted">admin@eztrak.com</span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No posts found.</p>
                    }
                </div>
                <div class="update-footer m-3">
                    <textarea rows="5" class="form-control mb-2" id="postvalue" placeholder="Add new note..."></textarea>
                    <button class="btn btn-update" id="btn_PostDetail_Save" data-type="1">
                        <i class="fa-solid fa-paper-plane me-2"></i>Add Note
                    </button>
                </div>
            </div>
        </div>
    }
    else if (Model.IncidentViewPostType == 2)
    {

        <div>
            <div class="card-custom validation-notes">
           
                <div id="update-list" style="padding:10px;overflow-y:auto;height:200px">
                    @if (Model.IncidentViewRepairViewModel?.listIncidentViewPostViewModel != null &&
                                    Model.IncidentViewCloseoutViewModel.listIncidentViewPostViewModel.Any())
                    {
                        @foreach (var post in Model.IncidentViewCloseoutViewModel.listIncidentViewPostViewModel.OrderByDescending(x => x.Id))
                        {
                            <div class="update-item d-flex justify-content-between align-items-start mb-2">
                                <div class="update-message flex-grow-1 me-3">@post.Message</div>
                                <div class="update-meta text-end d-flex flex-column align-items-end" style="white-space:nowrap">
                                    <span class="update-time">@post.TimeforMessage</span>
                                    <span class="update-email postby-div text-muted">admin@eztrak.com</span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No posts found.</p>
                    }
                </div>
                <div class="update-footer m-3">
                    <textarea rows="5" class="form-control mb-2" id="postvalue" placeholder="Add new note..."></textarea>
                    <button class="btn btn-update" id="btn_PostDetail_Save" data-type="2">
                        <i class="fa-solid fa-paper-plane me-2"></i>Add Note
                    </button>
                </div>
            </div>
        </div>


    }
    else if (Model.IncidentViewPostType == 3)
    {
         
            <div class="card-custom validation-notes">
              

                <div id="update-list" class="card-custom-bdy" style="padding:10px;overflow-y:auto;height:200px">
                    @if (Model.IncidentAssessmentDetails?.listIncidentViewPostViewModel != null &&
                                    Model.IncidentAssessmentDetails.listIncidentViewPostViewModel.Any())
                    {
                        @foreach (var post in Model.IncidentAssessmentDetails.listIncidentViewPostViewModel.OrderByDescending(x => x.Id))
                        {
                            <div class="update-item d-flex justify-content-between align-items-start mb-2">
                                <div class="update-message flex-grow-1 me-3">@post.Message</div>
                                <div class="update-meta text-end d-flex flex-column align-items-end" style="white-space:nowrap">
                                    <span class="update-time">@post.TimeforMessage</span>
                                    <span class="update-email postby-div text-muted">admin@eztrak.com</span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No posts found.</p>
                    }
                </div>
                <div class="update-footer m-3">
                    <textarea rows="5" class="form-control mb-2" id="postvalue" placeholder="Add new note..."></textarea>
                    <button class="btn btn-update" id="btn_PostDetail_Save" data-type="3">
                        <i class="fa-solid fa-paper-plane me-2"></i>Add Note
                    </button>
                </div>
            </div>
         

    }
    else if (Model.IncidentViewPostType == 4)
    {
        <div>
            <div class="card-custom validation-notes">
              

                <div id="update-list" style="padding:10px;overflow-y:auto;height:200px">
                    @if (Model.IncidentViewRestorationViewModel?.listIncidentViewPostViewModel != null &&
                                    Model.IncidentViewRestorationViewModel.listIncidentViewPostViewModel.Any())
                    {
                        @foreach (var post in Model.IncidentViewRestorationViewModel.listIncidentViewPostViewModel.OrderByDescending(x => x.Id))
                        {
                            <div class="update-item d-flex justify-content-between align-items-start mb-2">
                                <div class="update-message flex-grow-1 me-3">@post.Message</div>
                                <div class="update-meta text-end d-flex flex-column align-items-end" style="white-space:nowrap">
                                    <span class="update-time">@post.TimeforMessage</span>
                                    <span class="update-email postby-div-map text-muted">admin@eztrak.com</span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No posts found.</p>
                    }
                </div>
                <div class="update-footer m-3">
                    <textarea rows="5" class="form-control mb-2" id="postvalue" placeholder="Add new note..."></textarea>
                    <button class="btn btn-update" id="btn_PostDetail_Save" data-type="4">
                        <i class="fa-solid fa-paper-plane me-2"></i>Add Note
                    </button>
                </div>
            </div>
        </div>


    }

</form>

@* 
    <div>
        <h6>Updates & Approvals</h6>

        <div class="update-item">
            <span class="update-time">11:42 IC</span>
            <div>ICP-1 purge completed (2,800 gal extracted).</div>
        </div>

        <div class="update-item">
            <span class="update-time">12:45 FER</span>
            <div>
                ICP-2 purge verified and logged.
            </div>
        </div>

        <div class="update-item">
            <span class="update-time">13:10 ENG</span>
            <div>Pressure gauge readings stable.</div>
        </div>

        <div class="update-item">
            <span class="update-time">13:25 GEC</span>
            <div>Disposal manifest issued for PRG-001.</div>
        </div>

        <div class="update-item">
            <span class="update-time">13:35 FER</span>
            <div>Containment labels verified for Baker tank. </div>
        </div>
    </div>

    <div class="update-footer mt-3">
        <textarea type="text" rows="5" class="form-control mb-2" id="post" placeholder="Post an update..."></textarea>
        <button class="btn btn-update"><i class="fa-solid fa-paper-plane me-2"></i>Post Update</button>
    </div> *@


<script>
      $(document).ready(function () {
        $("#btn_PostDetail_Save").each(function () {
            var firstLine = $(this).data("firstline");
            if (firstLine && !$(this).find(".btn-firstline").length) {
                // prepend a block-level span so it appears as the "first line" inside the button
                $(this).prepend('<span class="btn-firstline d-block small text-muted">' + firstLine + '</span>');
            }
        });
    });

    // keep only one delegated click handler; pass the clicked button into savePostDetails
    $(document).off("click", "#btn_PostDetail_Save");
    $(document).on("click", "#btn_PostDetail_Save", function (e) {
        e.preventDefault();
        var type = $(this).attr("data-type");

        // pass the clicked element so we can scope to the correct card/update-list/postvalue
        savePostDetails(type, this);
    })

    async function savePostDetails(type, clickedBtn) {

        type = parseInt(type);
        var $btn = $(clickedBtn);
        var $card = $btn.closest(".card-custom");

        try {

            let form = [];
            let formData = new FormData();
            let obj = $("#NewPostDetailForm")[0];

            // Serialize other fields
            let params = $(obj).serializeArray();

            let now = new Date();
            let hours = now.getHours().toString().padStart(2, "0");
            let minutes = now.getMinutes().toString().padStart(2, "0");
            let year = now.getFullYear();
            let month = (now.getMonth() + 1).toString().padStart(2, "0"); // Months are 0-based
            let day = now.getDate().toString().padStart(2, "0");

            let currentTime = `${month}-${day}-${year} ${hours}:${minutes}`;
         //   let currentTime = `${hours}:${minutes}`;
            formData.append("IncidentViewPostViewModel.TimeforMessage", currentTime + " ");
            formData.append("IncidentViewPostViewModel.IncidentId", @Model.Id);
            formData.append("IncidentViewPostViewModel.IncidentViewType", type);

            // get message from the textarea inside the same card/footer as the clicked button
            var message = $card.find("#postvalue").val();
            formData.append("IncidentViewPostViewModel.Message", message);

            let response = await fetch("/IncidentDetail/SavePostDetails", {
                method: "POST",
                body: formData
            });

            let result = await response.json();

            if (result.success && result.data) {
                let $updateList = $card.find("#update-list");

                // clear old list
                $updateList.empty();

                // append new posts
                result.data.forEach(item => {
                    $updateList.append(`
                        <div class="update-item d-flex justify-content-between align-items-start mb-2">
                            <div class="update-message flex-grow-1 me-3">${item.Message || ''}</div>
                            <div class="update-meta text-end d-flex flex-column align-items-end" style="white-space:nowrap">
                                <span class="update-time">${item.TimeforMessage || ''}</span>
                                <span class="update-email small text-muted">admin@eztrak.com</span>
                            </div>
                        </div>
                    `);
                });

                // scroll the update-list to the bottom so last record is visible
                // animate for smoothness
                try {
                    $updateList.animate({ scrollTop: $updateList.prop("scrollHeight") }, 300);
                } catch (err) {
                    // fallback: set immediately
                    $updateList.scrollTop($updateList.prop("scrollHeight"));
                }

                // clear textarea
                $card.find("#postvalue").val("");
            }


        } catch (error) {
            SwalErrorAlert("Error while saving incident!");
            console.error(error);
        } finally {
            hideLoader($("#addIncidentModal"));
        }
    }
</script>