@using ViewModels
@model List<IncidentTeamModifyViewModel>
<style>
    .cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 15px;
    }

    .card {
        background: white;
        border-radius: 12px;
        padding: 15px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.08);
    }

    .cardHeader {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card h4 {
        margin: 0;
        font-size: 16px;
    }

        .card h4 .fa-pen {
            color: #2563eb;
            cursor: pointer;
        }



    .card p {
        margin: 6px 0;
        font-size: 14px;
    }

    .card p {
        font-size: 14px;
        font-weight: 400;
        margin-top: 0;
        margin-bottom: 6px;
        color: grey;
    }

    .card .lbl {
        font-size: 14px;
        font-weight: 700;
        color: dimgrey;
    }

    .editDeIcons .fa-edit {
        color: orange;
    }

    .editDeIcons .fa-trash-alt {
        color: red;
    }

</style>
<div class="cards">
    @if (Model != null && Model.Count > 0)
    {

        foreach (var team in Model)
        {

            <div class="card">
                <div class="cardHeader">
                    <h4>@team.Name</h4>
                    <div class="editDeIcons">
                        <i class="fa-regular fa-edit edit editIncidentTeam" id="@team.Id"></i>
                        <i class="far fa-trash-alt deleteIncidentTeam" id="@team.Id"></i>
                    </div>
                    
                </div>

                <p><span class="lbl">Department: </span>@(!string.IsNullOrWhiteSpace(team.Department) ? team.Department : "N/A")</p>
                <p><span class="lbl">Contact: </span>@(!string.IsNullOrWhiteSpace(team.Contact) ? team.Contact : "N/A")</p>
                <p><span class="lbl">Specializations:</span></p>
                <div class="specializations">
                    @if (!string.IsNullOrWhiteSpace(team.Specializations))
                    {
                        var items = team.Specializations.Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
                        foreach (var s in items)
                        {
                            <span>@s</span>
                        }
                    }
                    else
                    {
                        <span>None</span>
                    }

                </div>

                @* <div class="text-muted small">Department: @(!string.IsNullOrWhiteSpace(team.Department) ? team.Department : "N/A")</div> *@
                @* <div class="text-muted small">Contact: @(!string.IsNullOrWhiteSpace(team.Contact) ? team.Contact : "N/A")</div> *@
                @*   <div class="mt-2"> *@
                @* <strong class="small text-muted">Specializations:</strong> *@
                @*  @if (!string.IsNullOrWhiteSpace(team.Specializations))
                        {
                            var items = team.Specializations.Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
                            foreach (var s in items)
                            {
                                <span class="spec-tag" style="background:#e6f0ff;border:1px solid #cfe0ff;margin-right:6px;">@s</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">None</span>
                        }
                    </div> *@


                @* <div class="actions text-end">
                    <i class="fa fa-pen edit editIncidentTeam" id="@team.Id" style="cursor:pointer; color:#0563c1;"></i>
                    <i class="fa fa-trash delete deleteIncidentTeam ms-3" id="@team.Id" style="cursor:pointer; color:#d9534f;"></i>
                </div> *@
            </div>

        }

    }

    else
    {
        <div class="card p-3"><span>No Teams found.</span></div>
    }
</div>
