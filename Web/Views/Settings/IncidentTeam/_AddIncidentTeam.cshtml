@using ViewModels
@model IncidentTeamModifyViewModel
<style>

    /*******add team***/
    .form-container {
        background: #f0f6ff;
        border: 1px solid #cdddfc;
        border-radius: 12px;
        padding: 20px;
        /* max-width: 600px; */
    }

    .teamRightSec .cards {
        margin-top: 16px;
    }

    .form-container h3 {
        margin-bottom: 15px;
        font-size: 18px;
    }

    .addNewTeam .form-control, .addNewTeam select {
        width: 100%;
        padding: 10px;
        font-size: 14px;
        border: 1px solid #d0d7e2;
        border-radius: 8px;
        margin-bottom: 12px;
        outline: none;
    }

    .addNewTeam label {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
    }

    .editDeIcons {
        width: 46px;
    }


    .addNewTeam .specialization-link {
        color: #2563eb;
        font-size: 13px;
        cursor: pointer;
        margin-bottom: 15px;
        display: inline-block;
        font-weight: 800;
    }

    .addNewTeam .btn {
        padding: 10px 18px;
        font-size: 14px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
    }

    .addNewTeam .btn-green {
        background: #22c55e;
        color: white;
        margin-right: 10px;
    }

    .addNewTeam .btn-gray {
        background: #4b5563;
        color: white;
    }

    .teamRightSec .card p {
        font-size: 14px;
        font-weight: 400;
        margin-top: 0;
        margin-bottom: 6px;
        color: grey;
    }

    .teamRightSec .card .lbl {
        font-size: 14px;
        font-weight: 700;
        color: dimgrey;
    }

    .editDeIcons .fa-edit {
        color: orange;
    }

    .editDeIcons .fa-trash-alt {
        color: red;
    }

    .addMoreSpecialization {
        display: flex;
        align-items: center;
    }

        .addMoreSpecialization div {
            margin-top: -10px;
            margin-left: 6px;
            color: red;
        }

    .remove-specialization{
        background:transparent;
        border:none;
        color:red;
        font-size:16px;
        margin-left:10px;
    }
</style>
<form id="NewIncidentTeamForm" autocomplete="off">
    <div id="saveIncidentTeamDiv" class="form-container addNewTeam">
        <h3>Add New Team</h3>

        <!-- Team name -->
        @*  <div class="mb-3"> *@
        <input type="hidden" asp-for="Id" name="Id" id="incidentTeam_@Model.Id" />
        <input type="text" class="form-control" placeholder="Team name (e.g., Distribution Emergency Team)" asp-for="Name" data-val-required="Required" />
        @* </div> *@

        <!-- Department -->
        @*  <div class="mb-3"> *@
        @{
            var depts = new[] { "Distribution", "Transmission", "Contractors", "Emergency", "Safety" };
        }
        <select asp-for="Department" name="Department" id="departmentSelect" class="form-control" data-val-required="Required">
            <option value="">Select Department</option>
            @foreach (var d in depts)
            {
                if (string.Equals(d, Model?.Department, StringComparison.OrdinalIgnoreCase))
                {
                    <option value="@d" selected="selected">@d</option>
                }
                else
                {
                    <option value="@d">@d</option>
                }
            }
        </select>
        @* </div> *@

        <!-- Contact -->
        @*   <div class="mb-3"> *@
        <input type="text"
               class="form-control form-control-lg"
               placeholder="Contact ID (e.g., 555-EMERGENCY-001)"
               asp-for="Contact" id="contactInput" />
        <span asp-validation-for="Contact" class="text-danger"></span>
        @* </div> *@

        <!-- Specializations label + quick input (ONLY input visible initially) -->
        <label>Specializations</label>
        <input type="text" id="specializationInput" class="form-control" placeholder="Enter specialization">


        @*   <label class="form-label fw-600">Specializations</label> *@
        @*  <div class="mb-2 d-flex gap-2"> *@
        @*   <input type="text" id="specializationInput" class="form-control" placeholder="Enter specialization" /> *@
        <span id="addSpecializationBtn" class="specialization-link">+ Add more specialization</span>
        @* </div> *@

        <!-- Dynamic list (render only existing items; do NOT render an empty default row) -->
        <div id="specializationsList">
            @if (Model.SpecializationList != null && Model.SpecializationList.Any())
            {
                for (int i = 0; i < Model.SpecializationList.Count; i++)
                {
                    @* <div class="input-group mb-2 specialization-row">
                        <input type="text" name="SpecializationList[@i]" value="@Model.SpecializationList[i]" class="form-control specialization-input" placeholder="Enter specialization" />
                        <button type="button" class="btn btn-danger remove-specialization">Delete</button>
                    </div> *@

                    <div class="d-flex align-items-center addMoreSpecialization specialization-row">
                        <input type="text"
                               name="SpecializationList[@i]"
                               value="@Model.SpecializationList[i]"
                               class="form-control"
                               placeholder="Enter specialization" />
                        <button type="button" class="remove-specialization" title="Remove">
                            <i class="fa fa-close"></i>
                        </button>
                    </div>

                }
            }
            <!-- IMPORTANT: If there are no saved items, we intentionally render NOTHING here.
                 The user uses the quick input above to add the first item. -->
        </div>

        <span asp-validation-for="SpecializationList" class="text-danger"></span>

        <!-- Buttons row: equal width -->
        <div class="d-flex align-items-center addCancelIcons justify-content-end mt-3">
            <button type="button" class="btn btn-green saveIncidentTeam">@(Model?.Id > 0 ? "Update Team" : "Add Team")</button>
            <button type="button" class="btn btn-gray cancelIncidentTeam">Cancel</button>
        </div>
        @*   <div class="mt-3 d-flex gap-2">
            <div class="flex-fill">
                <button type="button" class="btn btn-orange w-100 saveIncidentTeam action-btn">
                    <i class="fa-solid fa-check"></i> @(Model?.Id > 0 ? "Update Team" : "Add Team")
                </button>
            </div>
            <div class="flex-fill">
                <button type="button" class="btn btn-outline-secondary w-100 cancel cancelIncidentTeam action-btn">
                    <i class="fa-solid fa-xmark"></i> Cancel
                </button>
            </div>
        </div> *@
    </div>
</form>

<style>
    /*   .incident-team-form .card {
            background: #fdfaf8;
            border-radius: 8px;
            border: 1px solid #f5d9c8;
        }

        .incident-team-form .form-control, .incident-team-form .form-select {
            height: 44px;
        }

        .btn-orange {
            background-color: #f37021;
            border-color: #f37021;
            color: #fff;
            font-weight: 600;
        }

        .btn-outline-orange {
            border: 1px solid #f37021;
            color: #f37021;
            font-weight: 600;
        }

            .btn-outline-orange:hover {
                background-color: #f37021;
                color: #fff;
            }

        .action-btn {
            min-height: 44px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            font-weight: 600;
            border-radius: 6px;
        }

        .input-group .btn-danger {
            margin-left: 8px;
        } */
</style>

<script>
    (function () {

        function reindexSpecializations() {
            $("#specializationsList .specialization-row").each(function (i) {
                // update the name attribute to be SpecializationList[i]
                $(this).find("input.specialization-input").attr("name", "SpecializationList[" + i + "]");
            });
        }

        // Add a new specialization from quick input
        $(document).off("click", "#addSpecializationBtn").on("click", "#addSpecializationBtn", function (e) {
            e.preventDefault();
            var raw = ($("#specializationInput").val() || "").toString().trim();
            if (!raw) return;

            // prevent adding exact duplicate (case-insensitive)
            var dup = false;
            $("#specializationsList .specialization-input").each(function () {
                if ($(this).val() && $(this).val().toString().trim().toLowerCase() === raw.toLowerCase()) {
                    dup = true;
                    return false;
                }
            });
            if (dup) {
                $("#specializationInput").val("").focus();
                return;
            }

            var index = $("#specializationsList .specialization-row").length;

            var $row = $("<div>").addClass("d-flex align-items-center addMoreSpecialization specialization-row");
            var $input = $("<input>")
                .attr({
                    type: "text",
                    name: "SpecializationList[" + index + "]",
                    value: raw,
                    placeholder: "Enter specialization"
                })
                .addClass("form-control specialization-input");
            var $btn = $("<button>")
                .attr("type", "button")
                .addClass("remove-specialization")
                .html('<i class="far fa-trash-alt "></i>');

            $row.append($input).append($btn);
            $("#specializationsList").append($row);

            $("#specializationInput").val("").focus();
            reindexSpecializations();
        });

        // Enter key in quick input triggers add
        $(document).off("keyup", "#specializationInput").on("keyup", "#specializationInput", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
                $("#addSpecializationBtn").trigger("click");
            }
        });

        // Remove row and reindex
        $(document).off("click", ".remove-specialization").on("click", ".remove-specialization", function () {
            $(this).closest(".specialization-row").remove();
            reindexSpecializations();
        });

        // Ensure existing server-rendered rows are indexed on load
        $(function () {
            reindexSpecializations();
        });

    })();
</script>
