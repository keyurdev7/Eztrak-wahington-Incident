@model ViewModels.BaseSelect2VM

@{
    var prefix = ViewData.TemplateInfo.HtmlFieldPrefix ?? "AssetType";
    var elementId = ViewData["Id"] != null && !string.IsNullOrEmpty(ViewData["Id"].ToString()) ? ViewData["Id"].ToString() : "asset-type-id";
    var elementClass = ViewData["Class"] != null && !string.IsNullOrEmpty(ViewData["Class"].ToString()) ? ViewData["Class"].ToString() : "";
    var label = ViewData["Label"] != null && !string.IsNullOrEmpty(ViewData["Label"].ToString()) ? ViewData["Label"].ToString() : "Asset Type";
    var hideLabel = ViewData["HideLabel"] != null && !string.IsNullOrEmpty(ViewData["HideLabel"].ToString()) ? ViewData["HideLabel"].ToString() : "false";
}

<div class="form-group">
    @if (hideLabel != null && hideLabel == "false")
    {
        <label class="form-label fw-600">@label</label>
    }

    @Html.DropDownListFor(model => model.Id, new List<SelectListItem>() {
        new SelectListItem()
        {
            Value = (Model!=null&&Model.Id > 0)?Model.Id.ToString():"",
            Text = (Model!=null&&Model.Id > 0)?Model.Select2Text:"",
            Selected = (Model!=null&&Model.Id > 0)?true:false,
        }
    },
            new
            {
                @id = elementId,
                @class = $"form-control customized-select disable-field {elementClass}",
                data_select2_initialize_function = "SetAssetTypeSelect2",
                data_val_required = Model?.ErrorMessage,
                data_val = Model?.IsValidationEnabled.ToString().ToLower()
            })
    <input type="hidden" data-identifier="@prefix" data-input-name="Name" name="AssetType.Name" value="@Model.Select2Text" />
    <span asp-validation-for="Id" class="validation-invalid-label assetType-error-span"></span>
</div>
